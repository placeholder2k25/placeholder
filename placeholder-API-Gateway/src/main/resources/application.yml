server:
  port: 8080

spring:
  application:
    name: api-gateway
  data:
      redis:
          host: redis-19320.c16.us-east-1-3.ec2.redns.redis-cloud.com
          port: 19320
          password: Iibx3HzYvlQDsoCF99ZwFZkFT7mhW87P

  cloud:
    gateway:
      default-filters:
        - name: JwtReactiveFilter
      server:
        webflux:
          routes:
            - id: auth-routes
              uri: http://localhost:8081    # Same app, but only /auth
              predicates:
                - Path=/api/auth/**
              # filters:
              #   # - StripPrefix=1
              #   - AuthFilter          # Handle login, register, forgot-password
            # Route for Spring Boot service
            - id: springboot-service
              uri: http://localhost:8081   # Replace with service host/port or lb://SPRINGBOOT-SERVICE if using Eureka/Consul
              predicates:
                - Path=/spring-boot/api/**   # Routes that start with /spring-boot/api go here
              filters:
                - StripPrefix=1   # Apply your custom filter

            # Route for Flask service
            - id: flask-service
              uri: http://localhost:5000   # Flask service host/port
              predicates:
                - Path=/flask/api/**        # Routes that start with /flask/api go here
              filters:
                - StripPrefix=1   # Apply JWT filter here too (if you want auth)


jwt:
    secret: rRpkPukudTeK4NtCvwjUt+utZoJWfxImeKY8zWUqWfQ=

frontend:
    url: http://localhost:3000